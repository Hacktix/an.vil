val LUT = array(256);

for(rw val i = 0; i < 256; i++) {
    rw val cb = i;
    for(rw val bit = 0; bit < 8; bit++) {
        if((cb & 0x80) != 0)
            cb = cnv.u8((cb << 1) ^ 0x07);
        else
            cb = cnv.u8(cb << 1);
    }
    LUT[i] = cb;
}

loc fn from_bytearray(bytes) {
    if(bytes !is Array) -> nil;

    rw val crc = 0;
    each(rw val i, b : bytes) {
        crc = LUT[b^crc];
    }
    ret crc;
}

loc fn from_string(s) -> s !is String ? nil : from_bytearray(str.bytes(s));

ret {
    from_bytearray: from_bytearray,
    from_string: from_string
};