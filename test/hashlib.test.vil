val anvil = dofile("../init.vil");
val harness = require("harness");

harness.print_title("anvil.hash.crc8.from_bytearray()");

harness.print_section("Basic Usage");
harness.log_case("Single Byte", anvil.hash.crc8.from_bytearray(array {0xff}), 0xf3);
harness.log_case("Multiple Bytes", anvil.hash.crc8.from_bytearray(array {0xca, 0xfe}), 0x9b);
harness.print_cases();

harness.print_section("Edge Cases");
harness.log_case("Empty Array", anvil.hash.crc8.from_bytearray(array(0)), 0);
harness.log_case("Non-Array", anvil.hash.crc8.from_bytearray("abc"), nil);
harness.print_cases();



harness.print_title("anvil.hash.crc8.from_string()");

harness.print_section("Basic Usage");
harness.log_case("Single Character", anvil.hash.crc8.from_string("a"), 0x20);
harness.log_case("Multiple Characters", anvil.hash.crc8.from_string("Hello world"), 0x41);
harness.print_cases();

harness.print_section("Edge Cases");
harness.log_case("Empty String", anvil.hash.crc8.from_string(""), 0);
harness.log_case("Non-String", anvil.hash.crc8.from_string(123), nil);
harness.print_cases();

harness.end_tests();